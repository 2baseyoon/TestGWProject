<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="properties.context">	
	
	<select id="selectCodeList" parameterType="cmap" resultType="cmap">
		SELECT Code,
		       CodeName,
		       MultiCodeName
		  FROM covi_smart4j.sys_base_code
		 WHERE CodeGroup = #{codeGroup}
		   AND Code != #{codeGroup}
		   AND IsUse = 'Y'
		   <if test="reserved1 != null and reserved1 != ''">
		   	   AND Reserved1 = #{reserved1}
		   </if>
		 ORDER BY SortKey 
	</select>
	
	<select id="selectStandardCodeList" parameterType="cmap" resultType="cmap">
		SELECT Code,
		       CodeName,
		       MultiCodeName
		  FROM covi_smart4j.sys_base_code
		 WHERE CodeGroup = #{codeGroup}
		   AND Code != #{codeGroup}
		   AND IsUse = 'Y'
		   <if test="reserved1 != null and reserved1 != ''">
		   	   AND Reserved1 = #{reserved1}
		   </if>
		   AND CodeName != 'context.xml'
		   AND Reserved2 != 'Y'
		 ORDER BY SortKey
	</select>
	
	<select id="selectContextCodeList" parameterType="cmap" resultType="cmap">
		SELECT Code,
		       CodeName,
		       MultiCodeName
		  FROM covi_smart4j.sys_base_code
		 WHERE CodeGroup = #{codeGroup}
		   AND Code != #{codeGroup}
		   AND IsUse = 'Y'
		   AND CodeName = 'context.xml'
		 ORDER BY SortKey 
	</select>	
	
	<select id="selectInfraCodeList" parameterType="cmap" resultType="cmap">
		SELECT Code,
		       CodeName,
		       MultiCodeName
		  FROM covi_smart4j.sys_base_code
		 WHERE CodeGroup = #{codeGroup}
		   AND Code != #{codeGroup}
		   AND IsUse = 'Y'
		   AND Reserved2 = 'Y'
		 ORDER BY SortKey 
	</select>	
	
	<select id="selectServerList" parameterType="cmap" resultType="cmap">
		SELECT server_ip,
		       MAX(registdate) AS registdate
		  FROM covi_smart4j.z_covi_property_server_value
		 GROUP BY IF(server_ip = 'Framework', 0, 1), server_ip
	</select>	
	
	<select id="selectContextList" parameterType="cmap" resultType="cmap">		
		SELECT
			'context.xml' AS standardtype,
			A.name AS name,
			A.setkey AS setkey,
			CASE
				WHEN B.setkey IS NOT NULL THEN B.setvalue
				ELSE A.setvalue
			END AS referencevalue,
			CASE WHEN A.settype ='mutable' THEN  '가변' WHEN A.settype ='immutable' THEN  '불변' ELSE A.settype  END AS referenceValueType,
			CASE
				WHEN B.setkey IS NOT NULL THEN B.description
				ELSE A.description
			END AS description
		FROM (
			SELECT 
				name,
				setkey,
				MAX(setvalue) AS setvalue,
				type  as settype,
				MAX(description) AS description
			FROM 
				covi_smart4j.z_covi_property_standard_value
			WHERE 
				standardtype = 'cx'
				AND (
					dbtype = #{dbType}
					OR wasType = #{wasType}
					OR (
						dbtype = 'A'
						AND wastype ='A'
					)
				)
			GROUP BY
				name, setkey
		) A
		LEFT OUTER JOIN (
			SELECT
				*
			FROM
				covi_smart4j.z_covi_property_standard_value
			WHERE
				standardtype = 'cx' 
				AND dbtype = #{dbType}
				AND wasType = #{wasType}
		) B
		ON
			A.name = B.name
			AND A.setkey = B.setkey
	</select>
</mapper>