<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="webpart.schedule">
    <!-- 오늘의 일정 -->
    <select id="getSchedule" parameterType="cmap" resultType="cmap">
        SELECT FolderID AS "FolderID"
				,FolderType AS "FolderType"
				,FolderName AS "FolderName"
				,EventID AS "EventID"
				,Subject AS "Subject"
				,ImportanceState AS "ImportanceState"
				,RegisterCode AS "RegisterCode"
				,MultiRegisterName AS "MultiRegisterName"
				,DateID AS "DateID"
				,StartDateTime AS "StartDateTime"
				,StartDate AS "StartDate"
				,StartTime AS "StartTime"
				,EndDateTime AS "EndDateTime"
				,EndDate AS "EndDate"
				,EndTime AS "EndTime"
				,IsRepeat AS "IsRepeat"
				,RepeatID AS "RepeatID"
		FROM (
        	-- 개인일정만
           	SELECT
	        	E.FolderID
				,E.FolderType
				,Fn_BaseGetDictionary_S(#{lang}, FD.MultiDisplayName) AS FolderName
				,E.EventID
				,E.Subject
				,E.ImportanceState
				,E.RegisterCode
				,Fn_BaseGetDictionary_S(#{lang}, E.MultiRegisterName) AS MultiRegisterName
				,ED.DateID
				,ED.StartDateTime
				,ED.StartDate
				,ED.StartTime
				,ED.EndDateTime
				,ED.EndDate
				,ED.EndTime
				,ED.IsRepeat
				,ED.RepeatID
	        FROM EVENT  E
	        LEFT JOIN EVENT_DATE ED ON E.EventID = ED.EventID
	        INNER JOIN SYS_OBJECT_FOLDER FD ON E.FolderID = FD.FolderID AND FD.FolderType = 'Schedule.Person' AND FD.DeleteDate IS NULL
			<if test='aclDataArr != null and aclDataArr.length != 0'>
			INNER JOIN SYS_OBJECT_USER_ACL ACL ON FD.FolderID = ACL.ObjectID AND ACL.UserCode = #{userCode} AND ACL.jobSeq = #{jobSeq} AND ACL.ServiceType IN ('Schedule', 'Community') AND ACL.ObjectType = #{objectType}
			</if>
	        <![CDATA[
			WHERE ( (ED.StartDateTime >= #{StartDate} AND ED.StartDateTime < #{EndDate})		-- 이주내에 시작하는 일정
				OR (ED.StartDateTime <= #{StartDate} AND ED.EndDateTime >= #{EndDate})		-- 이전에 시작해서 이후에 끝나는 일정
				OR (#{StartDate} <= ED.EndDateTime AND ED.EndDateTime < #{EndDate}) )		-- 이주에 끝나는 일정
			]]>
	        AND E.DeleteDate IS NULL
	        AND E.IsDisplay = 'Y'
	        AND (E.RegisterCode = #{userCode} OR E.OwnerCode = #{userCode} )
	        
	        UNION ALL
	        
	        -- 참석자로 등록된 개인일정
	        SELECT
	        	E.FolderID
				,E.FolderType
				,Fn_BaseGetDictionary_S(#{lang}, FD.MultiDisplayName) AS FolderName
				,LE.EventID
				,E.Subject
				,E.ImportanceState
				,E.RegisterCode
				,Fn_BaseGetDictionary_S(#{lang}, E.MultiRegisterName) AS MultiRegisterName
				,ED.DateID
				,ED.StartDateTime
				,ED.StartDate
				,ED.StartTime
				,ED.EndDateTime
				,ED.EndDate
				,ED.EndTime
				,ED.IsRepeat
				,ED.RepeatID
	        FROM EVENT E
	        LEFT JOIN EVENT LE ON E.LinkEventID = LE.EventID AND LE.DeleteDate IS NULL
	        LEFT JOIN EVENT_DATE ED ON LE.EventID = ED.EventID
	        INNER JOIN SYS_OBJECT_FOLDER FD ON E.FolderID = FD.FolderID AND FD.FolderType = 'Schedule.Person' AND FD.DeleteDate IS NULL
	        <if test='aclDataArr != null and aclDataArr.length != 0'>
			INNER JOIN SYS_OBJECT_USER_ACL ACL ON FD.FolderID = ACL.ObjectID AND ACL.UserCode = #{userCode} AND ACL.jobSeq = #{jobSeq} AND ACL.ServiceType IN ('Schedule', 'Community') AND ACL.ObjectType = #{objectType}
			</if>
	        <![CDATA[
			WHERE ( (ED.StartDateTime >= #{StartDate} AND ED.StartDateTime < #{EndDate})		-- 이주내에 시작하는 일정
				OR (ED.StartDateTime <= #{StartDate} AND ED.EndDateTime >= #{EndDate})		-- 이전에 시작해서 이후에 끝나는 일정
				OR (#{StartDate} <= ED.EndDateTime AND ED.EndDateTime < #{EndDate}) )		-- 이주에 끝나는 일정
			]]>
	        AND E.DeleteDate IS NULL
	        AND E.IsDisplay = 'Y'
	        AND E.OwnerCode = #{userCode}
	        AND E.EventType = 'A'
	        
	        UNION ALL
	        
	        -- 개인일정 제외하고
	        SELECT
	        	E.FolderID
				,E.FolderType
				,Fn_BaseGetDictionary_S(#{lang}, FD.MultiDisplayName) AS FolderName
				,E.EventID
				,E.Subject
				,E.ImportanceState
				,E.RegisterCode
				,Fn_BaseGetDictionary_S(#{lang}, E.MultiRegisterName) AS MultiRegisterName
				,ED.DateID
				,ED.StartDateTime
				,ED.StartDate
				,ED.StartTime
				,ED.EndDateTime
				,ED.EndDate
				,ED.EndTime
				,ED.IsRepeat
				,ED.RepeatID
	        FROM EVENT E
	        LEFT JOIN EVENT_DATE ED ON E.EventID = ED.EventID
	        INNER JOIN SYS_OBJECT_FOLDER FD ON E.FolderID = FD.FolderID AND FD.FolderType <![CDATA[ <> ]]> 'Schedule.Person' AND FD.DeleteDate IS NULL
	        <if test='aclDataArr != null and aclDataArr.length != 0'>
			INNER JOIN SYS_OBJECT_USER_ACL ACL ON FD.FolderID = ACL.ObjectID AND ACL.UserCode = #{userCode} AND ACL.jobSeq = #{jobSeq} AND ACL.ServiceType IN ('Schedule', 'Community') AND ACL.ObjectType = #{objectType}
			</if>
	        <![CDATA[
			WHERE ( (ED.StartDateTime >= #{StartDate} AND ED.StartDateTime < #{EndDate})		-- 이주내에 시작하는 일정
				OR (ED.StartDateTime <= #{StartDate} AND ED.EndDateTime >= #{EndDate})		-- 이전에 시작해서 이후에 끝나는 일정
				OR (#{StartDate} <= ED.EndDateTime AND ED.EndDateTime < #{EndDate}) )		-- 이주에 끝나는 일정
			]]>
	        AND E.DeleteDate IS NULL
	        AND E.IsDisplay = 'Y'
	        AND E.IsPublic = 'Y'
	        
	        UNION ALL
	        
	        -- 개인일정 공유 이벤트
			SELECT 
				FD.FolderID
				,FD.FolderType
				,Fn_BaseGetDictionary_S(#{lang}, FD.MultiDisplayName) AS FolderName
				,E.EventID
				,E.Subject
				,E.ImportanceState
				,E.RegisterCode
				,Fn_BaseGetDictionary_S(#{lang}, E.MultiRegisterName) AS MultiRegisterName
				,ED.DateID
				,ED.StartDateTime
				,ED.StartDate
				,ED.StartTime
				,ED.EndDateTime
				,ED.EndDate
				,ED.EndTime
				,ED.IsRepeat
				,ED.RepeatID
			FROM EVENT E
			INNER JOIN	SYS_OBJECT_FOLDER FD	ON FD.FolderType = 'Schedule.Share'
			INNER JOIN	EVENT_SHARE ES ON ES.SpecifierCode = E.OwnerCode AND ES.TargetCode = #{userCode}
			INNER JOIN	EVENT_DATE ED ON E.EventID = ED.EventID
			<![CDATA[
			WHERE ( (ED.StartDateTime >= #{StartDate} AND ED.StartDateTime < #{EndDate})		-- 이주내에 시작하는 일정
				OR (ED.StartDateTime <= #{StartDate} AND ED.EndDateTime >= #{EndDate})		-- 이전에 시작해서 이후에 끝나는 일정
				OR (#{StartDate} <= ED.EndDateTime AND ED.EndDateTime < #{EndDate}) )		-- 이주에 끝나는 일정
			]]>
			AND E.FolderType = 'Schedule.Person'
			AND SYSDATE BETWEEN ES.StartDate AND ES.EndDate
			AND E.DeleteDate IS NULL
	        AND E.IsDisplay = 'Y'
		) A
		WHERE FolderType LIKE '%Schedule%'
		ORDER BY A.StartDateTime, A.EndDateTime
    </select>
</mapper>

