<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="webpart.employee">
	<select id="favoritesList" parameterType="cmap" resultType="cmap">
	/* webpart.employee.favoriteList */
    SELECT
		B.USERCODE AS "UserCode",
		NVL(FN_BASEGETDICTIONARY_S(#{lang}, B.MULTIDISPLAYNAME), B.DISPLAYNAME) AS "DisplayName",
		B.MOBILE AS "PhoneNumber",
		B.PHOTOPATH AS "PhotoPath",
		B.MAILADDRESS AS "MailAddress",
		NVL(FN_BASEGETDICTIONARY_S(#{lang}, C.MULTIDEPTNAME),C.DEPTNAME) AS "DeptName",
		NVL(FN_BASEGETDICTIONARY_S(#{lang}, C.MULTIJOBPOSITIONNAME), C.JOBPOSITIONNAME) AS "JobPositionName",
		<![CDATA[
		NVL((
			SELECT VI.VACFLAG
			FROM VM_VACATIONINFO_DAY VI
			WHERE UR_Code = B.USERCODE
			AND VI.VACDATE = TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD')
			AND (CASE WHEN VACOFFFLAG IN ('AM', 'PM')
			        THEN (
			            CASE 
			                WHEN VACOFFFLAG = 'AM' AND TO_CHAR(SYSTIMESTAMP, 'HH24') < 13 THEN 1 
			                WHEN VACOFFFLAG = 'PM' AND TO_CHAR(SYSTIMESTAMP, 'HH24') >= 13 THEN 1
			                ELSE 0
			            END
			        )
			        ELSE 1
			    END
			) > 0
			AND ROWNUM <= 1
		), '') AS "VacStatus"
		, NVL((
			SELECT 
			    CASE 
			        WHEN ATTENDTIME IS NOT NULL THEN 'lbl_att_offWork'
			        WHEN ATTENDTIME IS NULL THEN 'lbl_att_goWork'
			        ELSE NULL
			    END
			FROM ATTEND_COMMUTING_MST ACM
			WHERE ACM.USERCODE = B.UserCode
			AND TARGETDATE = TO_CHAR(SYSTIMESTAMP, 'yyyy-mm-dd')
			AND LENGTH(ATTSTARTTIME) > 0
		),'lbl_n_att_absent') AS "AttendStatus"
		, NVL((
			SELECT AMH.JOBSTSNAME || ';' || STARTTIME || ';' || ENDTIME || ';' || ETC
			FROM ATTEND_JOB_HISTORY AMH
			WHERE AMH.USERCODE = B.USERCODE
			AND JOBDATE = TO_CHAR(SYSTIMESTAMP,  'yyyy-mm-dd')
			AND AMH.STARTTIME <= TO_CHAR(SYSTIMESTAMP,  'HH24MI')
			AND AMH.ENDTIME > TO_CHAR(SYSTIMESTAMP,  'HH24MI')
		),'') AS "JobStatus"
        ]]>	
		FROM SYS_SENSING_ORG A
		JOIN SYS_OBJECT_USER B ON A.SELECTEDCODE = B.USERCODE
		JOIN SYS_OBJECT_USER_BASEGROUP C ON A.SELECTEDCODE = C.USERCODE
		WHERE 
		A.USERCODE = #{userCode} AND 
		C.JOBTYPE = 'Origin'
		ORDER BY A.MODIFYDATE DESC
    </select>
    
    <select id="notice" parameterType="cmap" resultType="cmap">
    /* webpart.employee.notice */
    SELECT * FROM (
		SELECT 
			  FN_BASEGETDICTIONARY_S(#{lang}, ur.MULTIDISPLAYNAME) AS "UserName"
			, FN_BASEGETDICTIONARY_S(#{lang}, gr.MULTIJOBLEVELNAME) AS "JobLevelName"
			, FN_BASEGETDICTIONARY_S(#{lang}, gr.MULTIJOBTITLENAME) AS "JobTitleName"
			, FN_BASEGETDICTIONARY_S(#{lang}, gr.MULTIJOBPOSITIONNAME ) AS "JobPositionName"
			, ur.MAILADDRESS AS "MailAddress"	
			, ur.PHOTOPATH AS "PhotoPath"
			, gr.SORTKEY AS "SortKey"
			, gr.JOBTITLESORTKEY AS "JobTitleSortKey"
			, gr.JOBPOSITIONSORTKEY AS "JobPositionSortKey"
			, gr.JOBLEVELSORTKEY AS "JobLevelSortKey"
			, NOTICE.*
		FROM (
			SELECT 
				  A.USERCODE AS "UserCode"
				, 'Birth' AS "Type"
				, A.BIRTHDIV AS "DateDiv"
				, TO_CHAR(SYSDATE, 'MM-DD') AS "Date"
				, 0 AS "isVac"
				, TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS "DateSort"
			FROM SYS_OBJECT_USER A
			WHERE 
			<if test='birthMode == "D"'>	
			(A.BIRTHDIV = 'S' AND TO_CHAR(TO_DATE(A.BIRTHDATE,'YYYY-MM-DD HH24:MI:SS'), 'MMDD') = TO_CHAR(TO_DATE(SYSDATE,'YYYY-MM-DD HH24:MI:SS'), 'MMDD'))
			OR (A.BIRTHDIV = 'L' AND TO_CHAR(TO_DATE(A.BIRTHDATE,'YYYY-MM-DD HH24:MI:SS'), 'MMDD') = (
				SELECT TO_CHAR(TO_DATE(LUNARDATE,'YYYY-MM-DD HH24:MI:SS'), 'MMDD') 
				FROM SYS_CALENDAR
				WHERE SOLARDATE = TO_CHAR(TO_DATE(SYSDATE,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD') AND DN_ID = 0
			))
			</if>
			<if test='birthMode == "M"'>
			(A.BIRTHDIV = 'S' and  TO_CHAR(TO_DATE(A.BIRTHDATE,'YYYY-MM-DD HH24:MI:SS'), 'MM') = TO_CHAR(TO_DATE(SYSDATE,'YYYY-MM-DD HH24:MI:SS'), 'MM'))
			OR (A.BIRTHDIV = 'L' AND TO_CHAR(TO_DATE(A.BIRTHDATE,'YYYY-MM-DD HH24:MI:SS'), 'MM') = (
				SELECT TO_CHAR(TO_DATE(LUNARDATE,'YYYY-MM-DD HH24:MI:SS'), 'MM') 
				FROM SYS_CALENDAR
				WHERE SOLARDATE = TO_CHAR(TO_DATE(SYSDATE,'YYYY-MM-DD HH24:MI:SS'), 'YY-MM') AND DN_ID = 0
			))
			</if>
			UNION ALL (
			<![CDATA[
				SELECT 
				      A.USERCODE  AS "UserCode"
					, 'Enter' AS "Type"
					, 'S' AS "DateDiv"
					, TO_CHAR(TO_DATE(A.ENTERDATE,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD') AS "Date"
					, 0 AS "isVac"
					, TO_CHAR(TO_DATE(A.ENTERDATE,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD') AS "DateSort"
				FROM SYS_OBJECT_USER A
				WHERE A.ENTERDATE IS NOT NULL AND LENGTH(A.ENTERDATE) > 0
					AND A.ENTERDATE > TO_CHAR(TRUNC(SYSDATE) - #{enterInterval}, 'YYYYMMDD')
			]]>
			)
			UNION ALL (
				SELECT BME.EVENTOWNER AS "UserCode"
					, BME.EVENTTYPE AS "Type"
					, 'S' AS "DateDiv"
					, TO_CHAR(TO_DATE(BME.EVENTDATE,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD') AS "Date"
					, 0 AS "isVac"
					, TO_CHAR(TO_DATE(BME.EVENTDATE,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD') AS "DateSort"
				FROM BOARD_MESSAGE_EVENT BME
				JOIN BOARD_MESSAGE BM ON BME.MESSAGEID = BM.MESSAGEID
				WHERE BME.EVENTDATE IS NOT NULL
				AND BM.FOLDERID = #{condolenceFolderID}
				AND BME.EVENTDATE BETWEEN TO_CHAR(TO_DATE(SYSDATE,'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD')
									AND TO_CHAR(TRUNC(SYSDATE) + 1 + #{addinterval}, 'YYYY-MM-DD')
			)
			UNION ALL (
			<![CDATA[
				SELECT APPLY.UR_CODE AS "UserCode"
					, APPLY.VACFLAG AS "Type"
					, 'S' AS "DateDiv"
					, APPLY.VACDATE AS "Date" 
					, 1 AS "isVac"
					, TO_CHAR(TO_DATE(APPLY.VACDATE,'YYYY-MM-DD HH24:MI:SS') + ((TO_DATE(SYSDATE,'YYYY-MM-DD HH24:MI:SS') - TO_DATE(APPLY.VACDATE,'YYYY-MM-DD HH24:MI:SS')) * 2)) AS "DateSort"	
				FROM (
					SELECT 
						A.UR_CODE, A.VACFLAG, B.VACDATE, B.VACDAY
					FROM VM_VACATIONINFO A
				    JOIN VM_VACATIONINFO_DAY B ON (B.UR_CODE = A.UR_CODE AND A.VACATIONINFOID = B.VACATIONINFOID)
					WHERE A.GUBUN = 'VACATION_APPLY'
				    AND B.VACDATE 
				    	BETWEEN TO_CHAR(TRUNC(SYSDATE), 'YYYY-MM-DD')
						AND TO_CHAR(TRUNC(SYSDATE) + 1 + #{addinterval}, 'YYYY-MM-DD')							
				) APPLY
			]]>
			)
			) NOTICE
			INNER JOIN SYS_OBJECT_USER UR ON NOTICE."UserCode" = UR.USERCODE
			INNER JOIN SYS_OBJECT_USER_BASEGROUP GR ON NOTICE."UserCode" = GR.USERCODE AND GR.JOBTYPE = 'Origin'
			WHERE UR.ISUSE = 'Y' AND UR.ISDISPLAY = 'Y' AND GR.COMPANYCODE = #{DN_Code}
		) A		
	ORDER BY "isVac" ASC, "DateSort" DESC
	</select>
</mapper>