<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user.record.gfile">
	<select id="selectRecordGFileListData" parameterType="cmap" resultType="cmap">
			SELECT	  A.RecordDeptCode AS "RecordDeptCode"
					, A.RecordProductName AS "RecordProductName"
					, A.ProductYear AS "ProductYear"
					, A.SeriesName AS "SeriesName"
					, A.SeriesCode AS "SeriesCode"
					, A.RecordSeq AS "RecordSeq"
					, A.RecordCount AS "RecordCount"
					, A.RecordSubject AS "RecordSubject"
					, A.RecordType AS "RecordType"
					, A.RecordTypeTxt AS "RecordTypeTxt"
					, A.EndYear AS "EndYear"
					, A.KeepPeriod AS "KeepPeriod"
					, A.KeepPeriodTxt AS "KeepPeriodTxt"
					, A.KeepMethod AS "KeepMethod"
					, A.KeepMethodTxt AS "KeepMethodTxt"
					, A.KeepPlace AS "KeepPlace"
					, A.KeepPlaceTxt AS "KeepPlaceTxt"
					, A.ProvideEndDate AS "ProvideEndDate"
					, A.RecordClass AS "RecordClass"
					, A.RecordClassTxt AS "RecordClassTxt"
					, A.EditCheck AS "EditCheck"
					, A.EditCheckTxt AS "EditCheckTxt"
					, A.RecordRegisteredCount AS "RecordRegisteredCount"
					, A.RecordPageCount AS "RecordPageCount"
					, A.RecordFileCount AS "RecordFileCount"
					, A.TakeoverCheck AS "TakeoverCheck"
					, A.TakeoverCheckTxt AS "TakeoverCheckTxt"
					, A.RecordClassNum AS "RecordClassNum"
					, A.SeriesPath AS "SeriesPath"
					, A.RecordStatus AS "RecordStatus"
					, A.RecordStatusTxt AS "RecordStatusTxt"
					, A.ProvideYN AS "ProvideYN"
					, A.WorkCharger AS "WorkCharger"
					, A.AutoYearYN AS "AutoYearYN"
					, A.RegistDate AS "RegistDate"
					, A.RCnt AS "RCnt"
			FROM(
				SELECT	  GRG.RecordDeptCode
						, GRG.RecordProductName
						, GRG.ProductYear
						, GRG.SeriesName
						, GRG.SeriesCode
						, GRG.RecordSeq
						, GRG.RecordCount
						, GRG.RecordSubject
						, GRG.RecordType
						, CASE GRG.RecordType WHEN '1' THEN '일반문서'
											  WHEN '2' THEN '도면류'
											  WHEN '3' THEN '사진·필름류 시청각기록물 '
											  WHEN '4' THEN '녹음·동영상류 시청각기록물'
											  WHEN '5' THEN '카드류'
											  ELSE ''
						  END AS RecordTypeTxt
						, GRG.EndYear
						, GRG.KeepPeriod
						, CASE GRG.KeepPeriod WHEN '01' THEN '01년'
											  WHEN '03' THEN '03년'
											  WHEN '05' THEN '05년'
											  WHEN '10' THEN '10년'
											  WHEN '20' THEN '20년'
											  WHEN '25' THEN '25년'
											  WHEN '30' THEN '준영구'
											  WHEN '40' THEN '영구'
											  ELSE ''
						  END AS KeepPeriodTxt
						, GRG.KeepMethod
						, CASE GRG.KeepMethod WHEN '1' THEN '원본과 보존매체를 함께 보존하는 방법'
											  WHEN '2' THEN '원본은 폐기하고 보존매체만 보존하는 방법'
											  WHEN '3' THEN '원본을 그대로 보존하는 방법'
											  ELSE ''
						  END AS KeepMethodTxt
						, GRG.KeepPlace
						, CASE GRG.KeepPlace WHEN '1' THEN '자료관'
											 WHEN '2' THEN '전문관리기관'
											 ELSE ''
						  END AS KeepPlaceTxt
						, GRG.ProvideEndDate
						, GRG.RecordClass
						, CASE GRG.RecordClass WHEN '1' THEN '신기록물'
											   WHEN '2' THEN '구기록물'
											   ELSE ''
						  END AS RecordClassTxt
						, GRG.EditCheck
						, CASE GRG.EditCheck WHEN '0' THEN '해당없음'
											 WHEN '1' THEN '수정함'
											 ELSE ''
						  END AS EditCheckTxt
						, GRG.RecordRegisteredCount
						, GRG.RecordPageCount
						, GRG.RecordFileCount
						, GRG.TakeoverCheck
						, CASE GRG.TakeoverCheck WHEN '0' THEN '해당없음'
												 WHEN '1' THEN '인수'
												 WHEN '2' THEN '인계'
												 ELSE ''
						  END AS TakeoverCheckTxt
						, GRG.RecordClassNum
						, GRG.SeriesPath
						, GRG.RecordStatus
						, CASE GRG.RecordStatus WHEN '0' THEN '처리 중'
													WHEN '1' THEN '편철 중'
													WHEN '2' THEN '편철'
													WHEN '3' THEN '현황보고완료'
													WHEN '4' THEN '이관완료'
													WHEN '5' THEN '폐지'
													WHEN '6' THEN '현황보고반려'
													WHEN '7' THEN '이관반려'
													WHEN '8' THEN '현황보고오류'
													WHEN '9' THEN '이관오류'
												ELSE ''
						  END AS RecordStatusTxt
						, GRG.ProvideYN
						, GRG.WorkCharger
						, GRG.RegistDate
						, GRG.AutoYearYN
						, NVL(GRD.RCnt, 0) AS RCnt
				FROM covi_approval4j.gov_record_gfile GRG
				LEFT OUTER JOIN (
					SELECT COUNT(*) AS RCnt
						 , GRD.RecordClassNum
					FROM covi_approval4j.gov_record_doc GRD
					GROUP BY GRD.RecordClassNum
				) GRD ON GRD.RecordClassNum = GRG.RecordClassNum
			) A
			<!-- 검색 데이터 Where 절 -->
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="recordClassNum != null and recordClassNum != ''">
					AND A.RecordClassNum = #{recordClassNum}
				</if>
				<if test="deptCode != null and deptCode != ''">
					AND (A.RecordDeptCode = #{deptCode} OR A.RecordDeptCode = 'Total' OR A.RecordDeptCode = '001')
				</if>
				<if test="seriesCode != null and seriesCode != ''">
					AND A.SeriesCode = #{seriesCode}
				</if>
				<if test="takeOverCheck != null and takeOverCheck != ''">
					AND A.TakeoverCheck = #{takeOverCheck}
				</if>
				<if test="recordStatus != null and recordStatus != ''">
					AND A.RecordStatus = #{recordStatus}
				</if>
				<if test="baseYear != null and baseYear != ''">
					AND A.ProductYear = #{baseYear} 
				</if>
				<if test="searchMode != null and searchMode !=''">
					<choose>
						<when test="searchMode == 'NotFile'">
							AND A.RecordStatus IN ('1', '5')
						</when>
						<when test="searchMode == 'File'">
							AND A.RecordStatus IN ('0', '2', '3', '4', '6', '7', '8', '9')
						</when>
					</choose>
				</if>
				<if test="searchType != null and searchType !='' and searchWord != null and searchWord !=''">
					<choose>
						<when test="searchType == 'all'">
							AND (
								A.RecordSubject LIKE CONCAT('%', #{searchWord}, '%') OR
								A.SeriesName LIKE CONCAT('%', #{searchWord}, '%') 
							)
						</when>
						<otherwise>
							<choose>
								<when test="searchType == 'RecordSubject'">
									AND A.RecordSubject LIKE CONCAT('%', #{searchWord} , '%')
								</when>
								<when test="searchType == 'SeriesName'">
									AND A.SeriesName LIKE CONCAT('%', #{searchWord} , '%')
								</when>
							</choose>
						</otherwise>
					</choose>
				</if>
			</trim>
			<!-- Order by 절 -->
			<trim prefix="ORDER BY"  prefixOverrides =",">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("RecordSubject")'>, A.RecordSubject</when>
					<when test='sortColumn.equalsIgnoreCase("RecordStatusTxt")'>, A.RecordStatusTxt</when>
					<when test='sortColumn.equalsIgnoreCase("RCnt")'>, A.RCnt</when>
					<when test='sortColumn.equalsIgnoreCase("RecordProductName")'>, A.RecordProductName</when>
					<when test='sortColumn.equalsIgnoreCase("SeriesName")'>, A.SeriesName</when>
					<when test='sortColumn.equalsIgnoreCase("EndYear")'>, A.EndYear</when>
					<when test='sortColumn.equalsIgnoreCase("KeepPeriodTxt")'>, A.KeepPeriodTxt</when>
					<when test='sortColumn.equalsIgnoreCase("TakeoverCheckTxt")'>, A.TakeoverCheckTxt</when>
					<when test='sortColumn.equalsIgnoreCase("RecordSeq")'>, A.RecordSeq</when>
					<otherwise>, A.RegistDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose> 
			</trim>
			<!-- paging query
	    	LIMIT {가져오는 로우수} OFFSET {몇번째 로우부터인지}
	     	-->
	    	<if test="pageSize != null and pageOffset != null">
	   			LIMIT #{pageSize} OFFSET #{pageOffset}
	   		</if>
	</select>
	
	<select id="selectRecordGFileListDataCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM covi_approval4j.gov_record_gfile A
	   	<!-- 검색 데이터 Where 절 -->
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="recordClassNum != null and recordClassNum != ''">
				AND A.RecordClassNum = #{recordClassNum}
			</if>
			<if test="deptCode != null and deptCode != ''">
				AND (A.RecordDeptCode = #{deptCode} OR A.RecordDeptCode = 'Total' OR A.RecordDeptCode = '001')
			</if>
			<if test="seriesCode != null and seriesCode != ''">
				AND A.SeriesCode = #{seriesCode}
			</if>
			<if test="takeOverCheck != null and takeOverCheck != ''">
				AND A.TakeoverCheck = #{takeOverCheck}
			</if>
			<if test="recordStatus != null and recordStatus != ''">
				AND A.RecordStatus = #{recordStatus}
			</if>
			<if test="baseYear != null and baseYear != ''">
				AND A.ProductYear = #{baseYear}  
			</if>
			<if test="searchMode != null and searchMode !=''">
				<choose>
					<when test="searchMode == 'NotFile'">
						AND A.RecordStatus IN ('1', '5')
					</when>
					<when test="searchMode == 'File'">
						AND A.RecordStatus IN ('0', '2', '3', '4', '6', '7', '8', '9')
					</when>
				</choose>
			</if>
			<if test="searchType != null and searchType !='' and searchWord != null and searchWord !=''">
				<choose>
					<when test="searchType == 'all'">
						AND (
							A.RecordSubject LIKE CONCAT('%', #{searchWord}, '%') OR
							A.SeriesName LIKE CONCAT('%', #{searchWord}, '%') 
						)
					</when>
					<otherwise>
						<choose>
							<when test="searchType == 'RecordSubject'">
								AND A.RecordSubject LIKE CONCAT('%', #{searchWord} , '%')
							</when>
							<when test="searchType == 'SeriesName'">
								AND A.SeriesName LIKE CONCAT('%', #{searchWord} , '%')
							</when>
						</choose>
					</otherwise>
				</choose>
			</if>
		</trim>
	</select>
	
	<select id="selectRecordHistoryList" parameterType="cmap" resultType="cmap">
			SELECT A.GFileHistoryID AS "GFileHistoryID"
				 , A.ModifyReason AS "ModifyReason"
				 , A.ModifierName AS "ModifierName"
				 , A.ModifyDate AS "ModifyDate"
				 , A.BeforeSubject AS "BeforeSubject"
				 , A.AfterSubject AS "AfterSubject"
				 , A.BeforeType AS "BeforeType"
				 , A.AfterType AS "AfterType"
				 , A.BeforeTypeTxt AS "BeforeTypeTxt"
				 , A.AfterTypeTxt AS "AfterTypeTxt"
				 , A.BeforeKeepPeriod AS "BeforeKeepPeriod"
				 , A.AfterKeepPeriod AS "AfterKeepPeriod"
				 , A.BeforeKeepPeriodTxt AS "BeforeKeepPeriodTxt"
				 , A.AfterKeepPeriodTxt AS "AfterKeepPeriodTxt"
			FROM(
				SELECT GRGH.GFileHistoryID 
					 , GRGH.ModifyReason
					 , SOU.DisplayName AS ModifierName
					 , DATE_FORMAT(GRGH.ModifyDate, '%Y-%m-%d %T') AS ModifyDate
					 , GRGH.BeforeSubject
					 , GRGH.AfterSubject
					 , GRGH.BeforeType
					 , CASE GRGH.BeforeType WHEN '1' THEN '일반문서'
											WHEN '2' THEN '도면류'
											WHEN '3' THEN '사진·필름류 시청각기록물 '
											WHEN '4' THEN '녹음·동영상류 시청각기록물'
											WHEN '5' THEN '카드류'
											ELSE ''
					   END AS BeforeTypeTxt
					 , GRGH.AfterType
					 , CASE GRGH.AfterType WHEN '1' THEN '일반문서'
								 		   WHEN '2' THEN '도면류'
								  		   WHEN '3' THEN '사진·필름류 시청각기록물 '
									 	   WHEN '4' THEN '녹음·동영상류 시청각기록물'
									 	   WHEN '5' THEN '카드류'
										   ELSE ''
					   END AS AfterTypeTxt
					 , GRGH.BeforeKeepPeriod
					 , CASE GRGH.BeforeKeepPeriod WHEN '01' THEN '01년'
									 			  WHEN '03' THEN '03년'
												  WHEN '05' THEN '05년'
												  WHEN '10' THEN '10년'
												  WHEN '20' THEN '20년'
												  WHEN '30' THEN '준영구'
												  WHEN '40' THEN '영구'
												  ELSE ''
					   END AS BeforeKeepPeriodTxt
					 , GRGH.AfterKeepPeriod
					 , CASE GRGH.AfterKeepPeriod WHEN '01' THEN '01년'
												 WHEN '03' THEN '03년'
											 	 WHEN '05' THEN '05년'
												 WHEN '10' THEN '10년'
												 WHEN '20' THEN '20년'
												 WHEN '30' THEN '준영구'
												 WHEN '40' THEN '영구'
												 ELSE ''
					   END AS AfterKeepPeriodTxt
				FROM covi_approval4j.gov_record_gfile_HISTORY GRGH
				LEFT OUTER JOIN covi_smart4j.sys_object_user SOU ON SOU.UserCode = GRGH.ModifierID
				WHERE GRGH.RecordClassNum = #{RecordClassNum}
			) A
			<!-- Order by 절 -->
			<trim prefix="ORDER BY"  prefixOverrides =",">
				<choose>
					<when test='sortColumn.equalsIgnoreCase("rowNum")'>rowNum</when>
					<when test='sortColumn.equalsIgnoreCase("ModifyReason")'>ModifyReason</when>
					<when test='sortColumn.equalsIgnoreCase("ModifierName")'>ModifierName</when>
					<otherwise>, A.ModifyDate</otherwise>
				</choose>
				<choose>
					<when test='sortDirection.equalsIgnoreCase("ASC")'> ASC</when>
					<otherwise> DESC</otherwise>
				</choose>
			</trim>
			<!-- paging query
	    	LIMIT {가져오는 로우수} OFFSET {몇번째 로우부터인지}
	     	-->
	    	<if test="pageSize != null and pageOffset != null">
	   			LIMIT #{pageSize} OFFSET #{pageOffset}
	   		</if>
	</select>
	
	<select id="selectRecordHistoryListCnt" parameterType="cmap" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM(
			SELECT GRGH.ModifyReason
				 , SOU.DisplayName AS ModifierName
				 , DATE_FORMAT(GRGH.ModifyDate, '%Y-%m-%d %T') AS ModifyDate
			FROM covi_approval4j.gov_record_gfile_HISTORY GRGH
			LEFT OUTER JOIN covi_smart4j.sys_object_user SOU ON SOU.UserCode = GRGH.ModifierID
			WHERE GRGH.RecordClassNum = #{RecordClassNum}
		) A
	</select>
		
	 <select id="selectBaseYearList" parameterType="cmap" resultType="cmap">
		SELECT DISTINCT (PRODUCTYEAR) AS "BaseYear" 
		FROM covi_approval4j.gov_record_gfile
		WHERE PRODUCTYEAR >= DATE_FORMAT(now(), '%Y')-10
		ORDER BY PRODUCTYEAR ASC
	</select>
	
	<insert id="insertRecordGFileData" parameterType="cmap">
		INSERT INTO covi_approval4j.gov_record_gfile
		(
			  RecordSubject
			, RecordDeptCode
			, RecordProductName
			, SeriesCode
			, SeriesName
			, ProductYear
			, RecordSeq
			, RecordCount
			, RecordType
			, EndYear
			, KeepPeriod
			, KeepMethod
			, KeepPlace
			, ProvideEndDate
			, WorkCharger
			, RecordClass
			, EditCheck
			, RecordRegisteredCount
			, RecordPageCount
			, RecordFileCount
			, TakeoverCheck
			, RecordClassNum
			, SeriesPath
			, RecordStatus
			, RegisterID
			, RegistDate
			, AutoYearYN
		)
		VALUES
		(
			  #{RecordSubject}
			, #{RecordDeptCode}
			, #{RecordDeptName}
			, #{SeriesCode}
			, #{SeriesName}
			, DATE_FORMAT(now(), '%Y')
			, #{RecordSeq}
			, LPAD('1', 3, '0')
			, #{RecordType}
			, #{EndYear}
			, #{KeepPeriod}
			, #{KeepMethod}
			, #{KeepPlace}
			, #{ProvideEndDate}
			, #{WorkCharger}
			, '1'
			, '0'
			, LPAD('1', 3, '0')
			, LPAD('1', 6, '0')
			, LPAD(#{RecordFileCount}, 6, '0')
			, '0'
			, #{RecordClassNum}
			, #{SeriesPath}
			, '1'
			, #{userCode}
			, now()
			, #{AutoYearYN}
		)
	</insert>
	
	<update id="updateRecordGFileData" parameterType="cmap">
		UPDATE covi_approval4j.gov_record_gfile
		SET   RecordSubject = #{RecordSubject}
			, RecordDeptCode = #{RecordDeptCode}
			, RecordProductName = #{RecordDeptName}
			, SeriesCode = #{SeriesCode}
			, SeriesName = #{SeriesName}
			, RecordType = #{RecordType}
			, EndYear = #{EndYear}
			, KeepPeriod = #{KeepPeriod}
			, KeepMethod = #{KeepMethod}
			, KeepPlace = #{KeepPlace}
			, ProvideEndDate = #{ProvideEndDate}
			, WorkCharger = #{WorkCharger}
			, SeriesPath = #{SeriesPath}
			, ModifierID = #{userCode}
			, ModifyDate = now()
			, ProductYear = #{BaseYear}
			, AutoYearYN = #{AutoYearYN}
			, RecordFileCount = LPAD(#{RecordFileCount}, 6, '0')
		WHERE 1 = 1
		AND RecordClassNum = #{RecordClassNum}
	</update>
	
	<insert id="insertRecordGFileHistory" parameterType="cmap">
		INSERT INTO covi_approval4j.gov_record_gfile_HISTORY
		(
			  RecordClassNum
			, ModifierID
			, ModifyDate
			, ModifyReason
			<if test="RecordSubject != null and RecordSubject != ''">
				, BeforeSubject
				, AfterSubject
			</if>
			<if test="RecordType != null and RecordType != ''">
				, BeforeType
				, AfterType
			</if>
			<if test="KeepPeriod != null and KeepPeriod != ''">
				, BeforeKeepPeriod
				, AfterKeepPeriod
			</if>
		)
		SELECT	#{RecordClassNum}
			  , #{userCode}
			  , now()
			  , #{ModifyReason}
			  <if test="RecordSubject != null and RecordSubject != ''">
				 , RecordSubject
			 	 , #{RecordSubject}
			  </if>
			  <if test="RecordType != null and RecordType != ''">
				 , RecordType
			  	 , #{RecordType}
			  </if>
			  <if test="KeepPeriod != null and KeepPeriod != ''">
				 , KeepPeriod
			  	 , #{KeepPeriod}
			  </if>
		FROM covi_approval4j.gov_record_gfile
		WHERE RecordClassNum = #{RecordClassNum}
	</insert>
	
	<update id="updateRecordStatus" parameterType="cmap">
		UPDATE covi_approval4j.gov_record_gfile
		SET RecordStatus = #{RecordStatus}
		WHERE 1 = 1
		AND RecordClassNum IN
		<foreach collection="RecordClassNumArr" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>
	
	<update id="updateExtendWork" parameterType="cmap">
		UPDATE covi_approval4j.gov_record_gfile
		SET EndYear = EndYear + 1
		WHERE 1 = 1
		AND RecordClassNum IN
		<foreach collection="RecordClassNumArr" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>
	
	<insert id="insertRecordTakeover" parameterType="cmap">
		INSERT INTO covi_approval4j.gov_record_gfile
		(
			   RecordSubject
			 , RecordDeptCode
			 , RecordProductName
			 , SeriesCode
			 , SeriesName
			 , ProductYear
			 , RecordSeq
			 , RecordCount
			 , RecordType
			 , EndYear
			 , KeepPeriod
			 , KeepMethod
			 , KeepPlace
			 , WorkCharger
			 , RecordClass
			 , EditCheck
			 , RecordRegisteredCount
			 , RecordPageCount
			 , RecordFileCount
			 , TakeoverCheck
			 , RecordClassNum
			 , SeriesPath
			 , RecordStatus
			 , RegisterID
			 , RegistDate
		)
		SELECT GRG.RecordSubject
			 , #{AfterDeptCode}
			 , SOG.DisplayName
			 , #{SeriesCode}
			 , GS.SeriesName
			 , GRG.ProductYear
			 , GRG.RecordSeq
			 , GRG.RecordCount
			 , GRG.RecordType
			 , GRG.EndYear
			 , GRG.KeepPeriod
			 , GRG.KeepMethod
			 , GRG.KeepPlace
			 , #{WorkCharger}
			 , GRG.RecordClass
			 , GRG.EditCheck
			 , GRG.RecordRegisteredCount
			 , GRG.RecordPageCount
			 , GRG.RecordFileCount
			 , '1'
			 , CONCAT(#{AfterDeptCode}, #{SeriesCode}, GRG.ProductYear, GRG.RecordSeq, GRG.RecordCount)
			 , #{SeriesPath}
			 , '1'
			 , #{userCode}
			 , now()
		FROM covi_approval4j.gov_record_gfile GRG
		LEFT OUTER JOIN covi_approval4j.gov_series GS ON GS.SeriesCode = #{SeriesCode}
		LEFT OUTER JOIN covi_smart4j.sys_object_group SOG ON SOG.GroupCode = #{AfterDeptCode}
		WHERE RecordClassNum = #{RecordClassNum}
		AND GS.BaseYear = #{BaseYear}
		<selectKey resultType="String" keyProperty="RecordClassNum" order="AFTER">
			SELECT #{AfterDeptCode}||#{SeriesCode}||GRG.ProductYear||GRG.RecordSeq||GRG.RecordCount AS RecordClassNum
			FROM covi_approval4j.gov_record_gfile GRG
			WHERE RecordClassNum = #{RecordClassNum}
		</selectKey>
	</insert>

	<update id="updateDocTakeover" parameterType="cmap">
		UPDATE covi_approval4j.gov_record_doc
		SET   RecordClassNum = #{RecordClassNum}
		WHERE 1 = 1
		AND RecordClassNum = #{BeforeRecordClassNum}
	</update>
		
	<update id="updateRecordTakeover" parameterType="cmap">				
		INSERT INTO covi_approval4j.gov_record_gfile (RecordClassNum, RecordDeptCode, TakeoverCheck, RecordDeptCode_1, SeriesCode_1, ProductYear_1, RecordSeq_1, RecordCount_1, REGISTDATE)
		SELECT
		    GRG.RecordClassNum,
		    GRG.RecordDeptCode,
		    '2',
		    #{AfterDeptCode},
		    #{SeriesCode},
		    GRG.ProductYear,
		    GRG.RecordSeq,
		    GRG.RecordCount,
		    now()
		FROM covi_approval4j.gov_record_gfile GRG
		WHERE GRG.RecordClassNum = #{RecordClassNum}
		    AND GRG.RecordDeptCode = #{BeforeDeptCode}
		ON DUPLICATE KEY UPDATE
		    TakeoverCheck = '2',
		    RecordDeptCode_1 = VALUES(RecordDeptCode_1),
		    SeriesCode_1 = VALUES(SeriesCode_1),
		    ProductYear_1 = VALUES(ProductYear_1),
		    RecordSeq_1 = VALUES(RecordSeq_1),
		    RecordCount_1 = VALUES(RecordCount_1);
	</update>
	
	<insert id="insertRecordGFileByExcel" parameterType="cmap">
		MERGE INTO covi_approval4j.gov_record_gfile GRG
		USING(
			<foreach collection="dataList" item="item" open="" separator="UNION" close="">
				SELECT	  #{item.RecordDeptCode} AS RecordDeptCode
						, #{item.RecordProductName} AS RecordProductName
						, #{item.RecordSubject} AS RecordSubject
						, #{item.SeriesName} AS SeriesName
						, #{item.SeriesCode} AS SeriesCode
						, LPAD(#{item.RecordSeq}, 6, '0') AS RecordSeq
						, LPAD(#{item.RecordCount}, 3, '0') AS RecordCount
						, #{item.ProductYear} AS ProductYear
						, #{item.RecordType} AS RecordType
						, #{item.EndYear} AS EndYear
						, LPAD(#{item.KeepPeriod}, 2, '0') AS KeepPeriod
						, #{item.KeepMethod} AS KeepMethod
						, #{item.KeepPlace} AS KeepPlace
						, #{item.RecordClass} AS RecordClass
						, #{item.EditCheck} AS EditCheck
						, LPAD(#{item.RecordRegisteredCount}, 3, '0') AS RecordRegisteredCount
						, LPAD(#{item.RecordPageCount}, 6, '0') AS RecordPageCount
						, LPAD(#{item.RecordFileCount}, 6, '0') AS RecordFileCount
						, #{item.TakeoverCheck} AS TakeoverCheck
						, #{item.RecordClassNum} AS RecordClassNum
						, '1' AS RecordStatus
						, #{item.SeriesPath} AS SeriesPath
				FROM DUAL
			</foreach>
		)A ON (GRG.RecordClassNum = A.RecordClassNum)
		WHEN MATCHED THEN
		UPDATE 
			<set>
				  GRG.RecordDeptCode = A.RecordDeptCode
				, GRG.RecordProductName = A.RecordProductName
				, GRG.RecordSubject = A.RecordSubject
				, GRG.SeriesName = A.SeriesName
				, GRG.SeriesCode = A.SeriesCode
				, GRG.RecordSeq = A.RecordSeq
				, GRG.RecordCount = A.RecordCount
				, GRG.ProductYear = A.ProductYear
				, GRG.RecordType = A.RecordType
				, GRG.EndYear = A.EndYear
				, GRG.KeepPeriod = A.KeepPeriod
				, GRG.KeepMethod = A.KeepMethod
				, GRG.KeepPlace = A.KeepPlace
				, GRG.RecordClass = A.RecordClass
				, GRG.EditCheck = A.EditCheck
				, GRG.RecordRegisteredCount = A.RecordRegisteredCount
				, GRG.RecordPageCount = A.RecordPageCount
				, GRG.RecordFileCount = A.RecordFileCount
				, GRG.TakeoverCheck = A.TakeoverCheck
				, GRG.RecordStatus = A.RecordStatus
				, GRG.SeriesPath = A.SeriesPath
				, GRG.ModifierID = #{userCode}
				, GRG.ModifyDate = now()
			</set>
		WHEN NOT MATCHED THEN
			INSERT
				<trim prefix="(" suffix=")" suffixOverrides="," >
					  GRG.RecordDeptCode
					, GRG.RecordProductName
					, GRG.RecordSubject
					, GRG.SeriesName
					, GRG.SeriesCode
					, GRG.RecordSeq
					, GRG.RecordCount
					, GRG.ProductYear
					, GRG.RecordType
					, GRG.EndYear
					, GRG.KeepPeriod
					, GRG.KeepMethod
					, GRG.KeepPlace
					, GRG.RecordClass
					, GRG.EditCheck
					, GRG.RecordRegisteredCount
					, GRG.RecordPageCount
					, GRG.RecordFileCount
					, GRG.TakeoverCheck
					, GRG.RecordClassNum
					, GRG.RecordStatus
					, GRG.SeriesPath
					, GRG.RegisterID
					, GRG.RegistDate
				</trim>
				<trim  prefix="VALUES (" suffix=")" suffixOverrides=",">
					  A.RecordDeptCode
					, A.RecordProductName
					, A.RecordSubject
					, A.SeriesName
					, A.SeriesCode
					, A.RecordSeq
					, A.RecordCount
					, A.ProductYear
					, A.RecordType
					, A.EndYear
					, A.KeepPeriod
					, A.KeepMethod
					, A.KeepPlace
					, A.RecordClass
					, A.EditCheck
					, A.RecordRegisteredCount
					, A.RecordPageCount
					, A.RecordFileCount
					, A.TakeoverCheck
					, A.RecordClassNum
					, A.RecordStatus
					, A.SeriesPath
					, #{userCode}
					, now()
				</trim>
	</insert>
	
	<insert id="insertRecordGFileByYear" parameterType="cmap">
		INSERT INTO covi_approval4j.gov_record_gfile (
		    RecordSubject,
		    RecordDeptCode,
		    RecordProductName,
		    SeriesCode,
		    SeriesName,
		    ProductYear,
		    RecordSeq,
		    RecordCount,
		    RecordType,
		    EndYear,
		    KeepPeriod,
		    KeepMethod,
		    KeepPlace,
		    WorkCharger,
		    RecordClass,
		    EditCheck,
		    RecordRegisteredCount,
		    RecordPageCount,
		    RecordFileCount,
		    TakeoverCheck,
		    RecordClassNum,
		    SeriesPath,
		    RecordStatus,
		    RegisterID,
		    AutoYearYN,
		    ProvideEndDate,
		    RegistDate
		)
		SELECT
		    REPLACE(RecordSubject, #{BaseYear}, #{BaseYear}) AS RecordSubject,
		    RecordDeptCode,
		    RecordProductName,
		    SeriesCode,
		    SeriesName,
		    #{BaseYear} AS ProductYear,
		    RecordSeq,
		    RecordCount,
		    RecordType,
		    EndYear + 1 AS EndYear,
		    KeepPeriod,
		    KeepMethod,
		    KeepPlace,
		    WorkCharger,
		    RecordClass,
		    EditCheck,
		    RecordRegisteredCount,
		    RecordPageCount,
		    RecordFileCount,
		    TakeoverCheck,
		    CONCAT(RecordDeptCode, SeriesCode, #{BaseYear}, RecordSeq, RecordCount) AS RecordClassNum,
		    SeriesPath,
		    RecordStatus,
		    RegisterID,
		    AutoYearYN,
		    ProvideEndDate,
		    NOW() AS RegistDate
		FROM covi_approval4j.gov_record_gfile
		WHERE ProductYear = #{BaseYear} - 1
		    AND RecordStatus != '5'
		ON DUPLICATE KEY UPDATE
		    RecordSubject = VALUES(RecordSubject),
		    RecordDeptCode = VALUES(RecordDeptCode),
		    RecordProductName = VALUES(RecordProductName),
		    SeriesCode = VALUES(SeriesCode),
		    SeriesName = VALUES(SeriesName),
		    ProductYear = VALUES(ProductYear),
		    RecordSeq = VALUES(RecordSeq),
		    RecordCount = VALUES(RecordCount),
		    RecordType = VALUES(RecordType),
		    EndYear = VALUES(EndYear),
		    KeepPeriod = VALUES(KeepPeriod),
		    KeepMethod = VALUES(KeepMethod),
		    KeepPlace = VALUES(KeepPlace),
		    WorkCharger = VALUES(WorkCharger),
		    RecordClass = VALUES(RecordClass),
		    EditCheck = VALUES(EditCheck),
		    RecordRegisteredCount = VALUES(RecordRegisteredCount),
		    RecordPageCount = VALUES(RecordPageCount),
		    RecordFileCount = VALUES(RecordFileCount),
		    TakeoverCheck = VALUES(TakeoverCheck),
		    RecordClassNum = VALUES(RecordClassNum),
		    SeriesPath = VALUES(SeriesPath),
		    RecordStatus = VALUES(RecordStatus),
		    RegisterID = VALUES(RegisterID),
		    AutoYearYN = VALUES(AutoYearYN),
		    ProvideEndDate = VALUES(ProvideEndDate),
		    RegistDate = VALUES(RegistDate)
	</insert>
	
	<insert id="insertRecordGFileByYearSchedule" parameterType="cmap">
		INSERT INTO covi_approval4j.gov_record_gfile (
		    RecordSubject,
		    RecordDeptCode,
		    RecordProductName,
		    SeriesCode,
		    SeriesName,
		    ProductYear,
		    RecordSeq,
		    RecordCount,
		    RecordType,
		    EndYear,
		    KeepPeriod,
		    KeepMethod,
		    KeepPlace,
		    WorkCharger,
		    RecordClass,
		    EditCheck,
		    RecordRegisteredCount,
		    RecordPageCount,
		    RecordFileCount,
		    TakeoverCheck,
		    RecordClassNum,
		    SeriesPath,
		    RecordStatus,
		    RegisterID,
		    AutoYearYN,
		    ProvideEndDate,
		    RegistDate
		)
		SELECT
		    REPLACE(RecordSubject, #{BaseYear}, #{BaseYear}) AS RecordSubject,
		    RecordDeptCode,
		    RecordProductName,
		    SeriesCode,
		    SeriesName,
		    #{BaseYear} AS ProductYear,
		    RecordSeq,
		    RecordCount,
		    RecordType,
		    EndYear + 1 AS EndYear,
		    KeepPeriod,
		    KeepMethod,
		    KeepPlace,
		    WorkCharger,
		    RecordClass,
		    EditCheck,
		    RecordRegisteredCount,
		    RecordPageCount,
		    RecordFileCount,
		    TakeoverCheck,
		    CONCAT(RecordDeptCode, SeriesCode, #{BaseYear}, RecordSeq, RecordCount) AS RecordClassNum,
		    SeriesPath,
		    RecordStatus,
		    RegisterID,
		    AutoYearYN,
		    ProvideEndDate,
		    NOW() AS RegistDate
		FROM covi_approval4j.gov_record_gfile
		WHERE ProductYear = #{BaseYear} - 1 AND AutoYearYN = 'Y'
		    AND RecordStatus != '5'
		ON DUPLICATE KEY UPDATE
		    RecordSubject = VALUES(RecordSubject),
		    RecordDeptCode = VALUES(RecordDeptCode),
		    RecordProductName = VALUES(RecordProductName),
		    SeriesCode = VALUES(SeriesCode),
		    SeriesName = VALUES(SeriesName),
		    ProductYear = VALUES(ProductYear),
		    RecordSeq = VALUES(RecordSeq),
		    RecordCount = VALUES(RecordCount),
		    RecordType = VALUES(RecordType),
		    EndYear = VALUES(EndYear),
		    KeepPeriod = VALUES(KeepPeriod),
		    KeepMethod = VALUES(KeepMethod),
		    KeepPlace = VALUES(KeepPlace),
		    WorkCharger = VALUES(WorkCharger),
		    RecordClass = VALUES(RecordClass),
		    EditCheck = VALUES(EditCheck),
		    RecordRegisteredCount = VALUES(RecordRegisteredCount),
		    RecordPageCount = VALUES(RecordPageCount),
		    RecordFileCount = VALUES(RecordFileCount),
		    TakeoverCheck = VALUES(TakeoverCheck),
		    RecordClassNum = VALUES(RecordClassNum),
		    SeriesPath = VALUES(SeriesPath),
		    RecordStatus = VALUES(RecordStatus),
		    RegisterID = VALUES(RegisterID),
		    AutoYearYN = VALUES(AutoYearYN),
		    ProvideEndDate = VALUES(ProvideEndDate),
		    RegistDate = VALUES(RegistDate)
	</insert>
			
	<select id="selectRecordSeq" parameterType="cmap" resultType="String">
		SELECT RecordSeq
		FROM covi_approval4j.gov_record_gfile
		WHERE 1=1
			AND ProductYear = #{ProductYear}
			AND RecordDeptCode = #{RecordDeptCode}
			AND SeriesCode = #{SeriesCode}
		ORDER BY RecordSeq DESC
		LIMIT 1
	</select>
	
	<select id="selectRecordGFileTreeData" parameterType="cmap" resultType="cmap">
		SELECT
		  A.FunctionCode AS "FunctionCode"
		  ,(CASE
		    WHEN (RecordStatus = 5 AND FunctionLevel = 2) then CONCAT(A.FunctionName,"(폐기)") 
		    ELSE A.FunctionName
 			end) AS FunctionName
		  , A.FunctionLevel AS "FunctionLevel"
		  , A.ParentFunctionCode AS "ParentFunctionCode"
		  , A.ParentFunctionName AS "ParentFunctionName"
		  , A.HasChild AS "HasChild"
		  , A.HasDocCount AS "HasDocCount"
		  , A.Sort AS "Sort"
		FROM (  
		  SELECT
		    GSF.FunctionCode
		    , GSF.FunctionName
		    , '0' AS FunctionLevel
		    , NULL AS  ParentFunctionCode
			, NULL AS ParentFunctionName
		    , 'Y' AS HasChild
    		, 0 AS HasDocCount
		    , 0 AS SORT
		    , 0 AS RecordStatus
		  FROM covi_approval4j.gov_series_FUNC GSF
		  WHERE GSF.Sort = 0			
		  
		  UNION
		  
		  SELECT  GRG.SERIESCODE AS FunctionCode
		 	, GRG.SERIESNAME AS FunctionName
		 	, '1' AS FunctionLevel
		 	, NULL AS  ParentFunctionCode
			, NULL AS ParentFunctionName
			, 'Y' AS HasChild
		 	, 0 AS HasDocCount
			,  1 AS SORT
			, GRG.RecordStatus
		  FROM covi_approval4j.gov_record_gfile GRG
		  WHERE GRG.PRODUCTYEAR  = #{BaseYear}
		  <if test='RecordAdmin != null and RecordAdmin != "Y"'>
				AND (GRG.RECORDDEPTCODE = #{DeptId} OR GRG.RecordDeptCode = 'Total' OR GRG.RecordDeptCode = '001')
		  </if>
			
		  UNION
		  
		  SELECT
		    GRG.RecordClassNum AS FunctionCode
		    , GRG.RecordSubject AS FunctionName
		    , '2' AS FunctionLevel
		    , GRG.SERIESCODE AS  ParentFunctionCode
		    , GRG.SERIESNAME AS ParentFunctionName
		    , 'N' AS HasChild
		    , NVL(GRD.CNT, 0) AS HasDocCount
		    , ROW_NUMBER() OVER(PARTITION BY GRG.SeriesCode ORDER BY GRG.RecordSubject) AS Sort
		    , GRG.RecordStatus
		  FROM covi_approval4j.gov_series_FUNC GSF
		  INNER JOIN covi_approval4j.gov_series GS ON GSF.FunctionCode = GS.SFCode
		  INNER JOIN covi_approval4j.gov_record_gfile GRG ON GS.SeriesCode = GRG.SeriesCode AND GRG.ProductYear = GS.BaseYear 
		  LEFT OUTER JOIN (
			SELECT COUNT(1) AS CNT, RecordClassNum
			FROM covi_approval4j.gov_record_doc
			WHERE DeleteDate IS NULL
			<if test='RecordAdmin != null and RecordAdmin != "Y"'>
				AND RECORDDEPTCODE = #{DeptId}
			</if>
			GROUP BY RecordClassNum
		  ) GRD ON GRD.RecordClassNum = GRG.RecordClassNum
		  WHERE GS.BaseYear = #{BaseYear}
   		  <if test='RecordAdmin != null and RecordAdmin != "Y"'>
   		 	AND (RECORDDEPTCODE = #{DeptId} OR RecordDeptCode = 'Total' OR RecordDeptCode = '001')
		  </if>
		) A
		ORDER BY A.FunctionLevel, A.Sort
	</select>
	
	<insert id="insertRecordGFileIntergrationHistory" parameterType="cmap">
		INSERT INTO covi_approval4j.gov_record_gfile_HISTORY
		(
			RecordClassNum
			, ModifierID
			, ModifyDate
			, ModifyReason
			, BeforeSubject
			, AfterSubject
			, AfterRecordStatus
			, IntergrationRecordClassNum
		)
		SELECT
			RecordClassNum
			, #{UserCode}
			, now()
			, '통합'
			, RecordSubject
			, RecordSubject
			, RecordStatus
			, #{IntergrationRecordClassNum}
		FROM covi_approval4j.gov_record_gfile
		WHERE RecordClassNum IN
		<foreach collection="RecordClassNumArr" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</insert>
	
	<update id="updateDocIntergration" parameterType="cmap">
		UPDATE covi_approval4j.gov_record_doc
		SET   RecordClassNum = #{IntergrationRecordClassNum}
		WHERE RecordClassNum IN
		<foreach collection="RecordClassNumArr" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>

	
</mapper>